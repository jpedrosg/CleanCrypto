//
//  BitcoinInteractor.swift
//  CleanStore
//
//  Created by JoÃ£o Pedro Giarrante on 27/09/20.
//  Copyright (c) 2020 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CryptoBusinessLogic
{
    func fetchCrypto(request: CryptoModels.FetchCrypto.Request)
}

protocol CryptoDataStore
{
    var crypto: Crypto! { get set }
}

class BitcoinInteractor: CryptoBusinessLogic, CryptoDataStore
{
    var crypto: Crypto!
    var presenter: CryptoPresentationLogic?
    var cryptoWorker = CryptoWorker()

    // MARK: Fetch Crypto
    
    func fetchCrypto(request: CryptoModels.FetchCrypto.Request)
    {

        cryptoWorker.fetchCrypto(ticket: request.ticket, currency: request.currency) { (crypto, error) -> Void in
            if let safeCrypto = crypto {
                self.crypto = safeCrypto
                let response = CryptoModels.FetchCrypto.Response(crypto: safeCrypto)
                self.presenter?.presentFetchedCrypto(response: response)
            }
//            else if let safeError = error {
//                // Errors here in future...
//            }
            
        }
        
    }
}
